<!DOCTYPE html>
%html{ :lang => "en_GB" }
  %head
    %meta{ :content => "text/html; charset=UTF-8", "http-equiv" => "Content-Type" }
    %meta{ :name => "language", :content => "en_GB" }
    %meta{ :name => "author", :content => "Norman Köhring" }
    %meta{ :name => "DC.title", :content => "Norman Köhring aka nkoehring" }
    %meta{ :name => "description", :content => "personal blog of Norman Köhring" }
    %meta{ :name => "keywords", :content => "personal blog nkoehring pSy staticmatic ruby python programming computer webdesign nerd" }
    /
      GeoURL
    %meta{ :name => "ICBM", :content => "51.332254, 12.362" }
    %meta{ :name => "geo.position", :content => "51.332254, 12.362" }
    %meta{ :name => "geo.region", :content => "DE" }
    %link{ :href => "mailto:me[at]nkoehring.de", :rel => "author" }
    %title< Lair of NKoehring
    %link( charset="utf-8" href="/stylesheets/application.css" media="screen" rel="stylesheet" title="Standard Layout" type="text/css" )

  %body( onLoad="onLoad();" )
    #page_wrapper
      #page
        %canvas#bg_canvas( width=580 height=580 ) Foo?
        %canvas#effect_canvas( width=280 height=580 ) Foo?
        #inner
          #head
            %ul
              %li{ :class => current?("/index.html") }
                %div
                  %a( href="/" tabindex="1" accesskey="s" ) articles
              %li{ :class => current? ("/tags.html") }
                %div
                  %a( href="/tags.html" tabindex="2" accesskey="t" ) tags
              %li{ :class => current? ("/about.html") }
                %div
                  %a( href="/about.html" tabindex="3" accesskey="a" ) about
              %li.right
                %div
                  %a( href="#{parent_url}" tabindex="4" accesskey="b" ) go back


          -if @title
            .header_container
              %h1
                =@title
                -if menu_page?
                  -# just a little baublery
                  -if @flourish == "penguin"
                    %span.penguin &#57344;
                  -else
                    %span.flourish=@flourish
                -else
                  -date = DateTime.parse(File.basename(current_page)[0,14])
                  %span.date=date.strftime "%Y-%m-%d %H:%M"

          #body
            =yield

          %p#signature{ :alt => "use more unicode (eg: What I like and what I am...)" }
            &#9753;  <!-- reversed floral heart bullet //-->
            &#9811;  <!-- pisces //-->
            &#9835;  <!-- music //-->
            &#9880;  <!-- nature //-->
            &#57344; <!-- tux //-->
            &#9733;  <!-- liberation //-->
            &#9774;  <!-- peace //-->
            &#9775;  <!-- YinYang //-->
            &#10087; <!-- rotated floral heart bullet //-->

    :javascript
      // its better to load the images early
      var bg_img = new Image();
      var effect_img = new Image();
      bg_img.src = '/images/bg.jpg';
      effect_img.src = '/images/bg_effect.png';

      function bind(context, name){ 
        return function(){ 
          return context[name].apply(context, arguments); 
        }; 
      } 

      var Effect = function() {
        if (!this.bg_canvas.getContext) {
          this.active = false;
        } else {
          this.bg_ctx = this.bg_canvas.getContext('2d');
          this.effect_ctx = this.effect_canvas.getContext('2d');

          this.bg_ctx.clearRect(0,0,580,580);
          this.bg_ctx.fillStyle = '#3D3D3D';

          this.bg_ctx.translate(288,288);
          this.effect_ctx.translate(0,288);

          // adjust the image position inside the canvas
          // and render it only inside the #page div
          var page_height = document.getElementById('page').getClientRects()[0].height;
          var y1 = -238;
          var y2 = 295;
          var maxh = (y2+Math.abs(y1) > page_height ? y1+page_height : y2);

          with (this.bg_ctx) {
            beginPath();
            arc(0,0,300,0,Math.PI*2,false);
            clip();
          }

          with (this.effect_ctx) {
            beginPath();
            moveTo(-5, y1);
            lineTo(295, y1);
            lineTo(295,maxh);
            lineTo(-5,maxh);
            clip();
            beginPath();
            arc(0,0,300,0,Math.PI*2,false);
            clip();
          }

          this.draw();
        }
      }

      Effect.prototype = {
        active: true,
        angle: 0.002,
        bg_canvas: document.getElementById('bg_canvas'),
        effect_canvas: document.getElementById('effect_canvas'),
        bg_img: bg_img,
        effect_img: effect_img,
        mode: 'continuous', // 'continuous' or 'mousemove'

        draw: function() {
          if (!this.active || !this.bg_img.complete || !this.effect_img.complete) { return; }
          this.bg_ctx.save();
          //this.bg_ctx.clearRect(-300,-300,300,300);
          this.bg_ctx.drawImage(this.bg_img,-288,-288,575,575);
          this.bg_ctx.restore();
          this.effect_ctx.save();
          this.effect_ctx.drawImage(this.effect_img,-288,-288,575,575);
          this.effect_ctx.restore();
          this.bg_ctx.rotate(this.angle);
          this.effect_ctx.rotate(this.angle);
        }
      }

      var effect = new Effect();
      var ticker = 0;
      function onLoad(event) {
        if (effect.mode == 'continuous') setInterval('effect.draw()', 150);
        else if (effect.mode == 'mousemove') { window.onmousemove = function(event) {
          // just do it on every fifth mousemove event to save cpu time
          ticker+=1;
          if (ticker % 9 == 0) {
            effect.draw();
            ticker = 0;
          }
        };}
      }


    / yeahahah... GoogleAnalytics my ass! I got the big brother now!
    :plain
      <img src="/cgi/bbla-logger.pl?dest=overall&referer=<!--#echo var='HTTP_REFERER'-->" alt="BBLA-Logger" >

  /
    credits
    * to the makers of Staticmatic, HAML and SASS
    * to Gabriel Shahzad ( http://herr-gabriel.de ) for using Biolinum on his page
    * to Nico Hagenburger ( http://hagenburger.net ) for providing the sources of his blog
    * to the identi.ca and twitter community for help and deliberation
    * to my flat mates

